// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "NodeJSTestTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "NodeJSTestTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Mod::SampleTypeSupport.

Mod::SampleTypeSupport_ptr
TAO::Objref_Traits<Mod::SampleTypeSupport>::duplicate (
    Mod::SampleTypeSupport_ptr p)
{
  return Mod::SampleTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<Mod::SampleTypeSupport>::release (
    Mod::SampleTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

Mod::SampleTypeSupport_ptr
TAO::Objref_Traits<Mod::SampleTypeSupport>::nil (void)
{
  return Mod::SampleTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Mod::SampleTypeSupport>::marshal (
    const Mod::SampleTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Mod::SampleTypeSupport::SampleTypeSupport (void)
{}

Mod::SampleTypeSupport::~SampleTypeSupport (void)
{
}

Mod::SampleTypeSupport_ptr
Mod::SampleTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SampleTypeSupport::_duplicate (
      dynamic_cast<SampleTypeSupport_ptr> (_tao_objref)
    );
}

Mod::SampleTypeSupport_ptr
Mod::SampleTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SampleTypeSupport::_duplicate (
      dynamic_cast<SampleTypeSupport_ptr> (_tao_objref)
    );
}

Mod::SampleTypeSupport_ptr
Mod::SampleTypeSupport::_nil (void)
{
  return 0;
}

Mod::SampleTypeSupport_ptr
Mod::SampleTypeSupport::_duplicate (SampleTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Mod::SampleTypeSupport::_tao_release (SampleTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Mod::SampleTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Mod/SampleTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Mod::SampleTypeSupport::_interface_repository_id (void) const
{
  return "IDL:Mod/SampleTypeSupport:1.0";
}

::CORBA::Boolean
Mod::SampleTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Mod::SampleDataWriter.

Mod::SampleDataWriter_ptr
TAO::Objref_Traits<Mod::SampleDataWriter>::duplicate (
    Mod::SampleDataWriter_ptr p)
{
  return Mod::SampleDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<Mod::SampleDataWriter>::release (
    Mod::SampleDataWriter_ptr p)
{
  ::CORBA::release (p);
}

Mod::SampleDataWriter_ptr
TAO::Objref_Traits<Mod::SampleDataWriter>::nil (void)
{
  return Mod::SampleDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Mod::SampleDataWriter>::marshal (
    const Mod::SampleDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Mod::SampleDataWriter::SampleDataWriter (void)
{}

Mod::SampleDataWriter::~SampleDataWriter (void)
{
}

Mod::SampleDataWriter_ptr
Mod::SampleDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SampleDataWriter::_duplicate (
      dynamic_cast<SampleDataWriter_ptr> (_tao_objref)
    );
}

Mod::SampleDataWriter_ptr
Mod::SampleDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SampleDataWriter::_duplicate (
      dynamic_cast<SampleDataWriter_ptr> (_tao_objref)
    );
}

Mod::SampleDataWriter_ptr
Mod::SampleDataWriter::_nil (void)
{
  return 0;
}

Mod::SampleDataWriter_ptr
Mod::SampleDataWriter::_duplicate (SampleDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Mod::SampleDataWriter::_tao_release (SampleDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Mod::SampleDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Mod/SampleDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Mod::SampleDataWriter::_interface_repository_id (void) const
{
  return "IDL:Mod/SampleDataWriter:1.0";
}

::CORBA::Boolean
Mod::SampleDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Mod::SampleDataReader.

Mod::SampleDataReader_ptr
TAO::Objref_Traits<Mod::SampleDataReader>::duplicate (
    Mod::SampleDataReader_ptr p)
{
  return Mod::SampleDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<Mod::SampleDataReader>::release (
    Mod::SampleDataReader_ptr p)
{
  ::CORBA::release (p);
}

Mod::SampleDataReader_ptr
TAO::Objref_Traits<Mod::SampleDataReader>::nil (void)
{
  return Mod::SampleDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Mod::SampleDataReader>::marshal (
    const Mod::SampleDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Mod::SampleDataReader::SampleDataReader (void)
{}

Mod::SampleDataReader::~SampleDataReader (void)
{
}

Mod::SampleDataReader_ptr
Mod::SampleDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SampleDataReader::_duplicate (
      dynamic_cast<SampleDataReader_ptr> (_tao_objref)
    );
}

Mod::SampleDataReader_ptr
Mod::SampleDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SampleDataReader::_duplicate (
      dynamic_cast<SampleDataReader_ptr> (_tao_objref)
    );
}

Mod::SampleDataReader_ptr
Mod::SampleDataReader::_nil (void)
{
  return 0;
}

Mod::SampleDataReader_ptr
Mod::SampleDataReader::_duplicate (SampleDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Mod::SampleDataReader::_tao_release (SampleDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Mod::SampleDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Mod/SampleDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Mod::SampleDataReader::_interface_repository_id (void) const
{
  return "IDL:Mod/SampleDataReader:1.0";
}

::CORBA::Boolean
Mod::SampleDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Mod::MaskedJunkTypeSupport.

Mod::MaskedJunkTypeSupport_ptr
TAO::Objref_Traits<Mod::MaskedJunkTypeSupport>::duplicate (
    Mod::MaskedJunkTypeSupport_ptr p)
{
  return Mod::MaskedJunkTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<Mod::MaskedJunkTypeSupport>::release (
    Mod::MaskedJunkTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

Mod::MaskedJunkTypeSupport_ptr
TAO::Objref_Traits<Mod::MaskedJunkTypeSupport>::nil (void)
{
  return Mod::MaskedJunkTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Mod::MaskedJunkTypeSupport>::marshal (
    const Mod::MaskedJunkTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Mod::MaskedJunkTypeSupport::MaskedJunkTypeSupport (void)
{}

Mod::MaskedJunkTypeSupport::~MaskedJunkTypeSupport (void)
{
}

Mod::MaskedJunkTypeSupport_ptr
Mod::MaskedJunkTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MaskedJunkTypeSupport::_duplicate (
      dynamic_cast<MaskedJunkTypeSupport_ptr> (_tao_objref)
    );
}

Mod::MaskedJunkTypeSupport_ptr
Mod::MaskedJunkTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MaskedJunkTypeSupport::_duplicate (
      dynamic_cast<MaskedJunkTypeSupport_ptr> (_tao_objref)
    );
}

Mod::MaskedJunkTypeSupport_ptr
Mod::MaskedJunkTypeSupport::_nil (void)
{
  return 0;
}

Mod::MaskedJunkTypeSupport_ptr
Mod::MaskedJunkTypeSupport::_duplicate (MaskedJunkTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Mod::MaskedJunkTypeSupport::_tao_release (MaskedJunkTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Mod::MaskedJunkTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Mod/MaskedJunkTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Mod::MaskedJunkTypeSupport::_interface_repository_id (void) const
{
  return "IDL:Mod/MaskedJunkTypeSupport:1.0";
}

::CORBA::Boolean
Mod::MaskedJunkTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Mod::MaskedJunkDataWriter.

Mod::MaskedJunkDataWriter_ptr
TAO::Objref_Traits<Mod::MaskedJunkDataWriter>::duplicate (
    Mod::MaskedJunkDataWriter_ptr p)
{
  return Mod::MaskedJunkDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<Mod::MaskedJunkDataWriter>::release (
    Mod::MaskedJunkDataWriter_ptr p)
{
  ::CORBA::release (p);
}

Mod::MaskedJunkDataWriter_ptr
TAO::Objref_Traits<Mod::MaskedJunkDataWriter>::nil (void)
{
  return Mod::MaskedJunkDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Mod::MaskedJunkDataWriter>::marshal (
    const Mod::MaskedJunkDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Mod::MaskedJunkDataWriter::MaskedJunkDataWriter (void)
{}

Mod::MaskedJunkDataWriter::~MaskedJunkDataWriter (void)
{
}

Mod::MaskedJunkDataWriter_ptr
Mod::MaskedJunkDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MaskedJunkDataWriter::_duplicate (
      dynamic_cast<MaskedJunkDataWriter_ptr> (_tao_objref)
    );
}

Mod::MaskedJunkDataWriter_ptr
Mod::MaskedJunkDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MaskedJunkDataWriter::_duplicate (
      dynamic_cast<MaskedJunkDataWriter_ptr> (_tao_objref)
    );
}

Mod::MaskedJunkDataWriter_ptr
Mod::MaskedJunkDataWriter::_nil (void)
{
  return 0;
}

Mod::MaskedJunkDataWriter_ptr
Mod::MaskedJunkDataWriter::_duplicate (MaskedJunkDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Mod::MaskedJunkDataWriter::_tao_release (MaskedJunkDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Mod::MaskedJunkDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Mod/MaskedJunkDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Mod::MaskedJunkDataWriter::_interface_repository_id (void) const
{
  return "IDL:Mod/MaskedJunkDataWriter:1.0";
}

::CORBA::Boolean
Mod::MaskedJunkDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Mod::MaskedJunkDataReader.

Mod::MaskedJunkDataReader_ptr
TAO::Objref_Traits<Mod::MaskedJunkDataReader>::duplicate (
    Mod::MaskedJunkDataReader_ptr p)
{
  return Mod::MaskedJunkDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<Mod::MaskedJunkDataReader>::release (
    Mod::MaskedJunkDataReader_ptr p)
{
  ::CORBA::release (p);
}

Mod::MaskedJunkDataReader_ptr
TAO::Objref_Traits<Mod::MaskedJunkDataReader>::nil (void)
{
  return Mod::MaskedJunkDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Mod::MaskedJunkDataReader>::marshal (
    const Mod::MaskedJunkDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Mod::MaskedJunkDataReader::MaskedJunkDataReader (void)
{}

Mod::MaskedJunkDataReader::~MaskedJunkDataReader (void)
{
}

Mod::MaskedJunkDataReader_ptr
Mod::MaskedJunkDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MaskedJunkDataReader::_duplicate (
      dynamic_cast<MaskedJunkDataReader_ptr> (_tao_objref)
    );
}

Mod::MaskedJunkDataReader_ptr
Mod::MaskedJunkDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MaskedJunkDataReader::_duplicate (
      dynamic_cast<MaskedJunkDataReader_ptr> (_tao_objref)
    );
}

Mod::MaskedJunkDataReader_ptr
Mod::MaskedJunkDataReader::_nil (void)
{
  return 0;
}

Mod::MaskedJunkDataReader_ptr
Mod::MaskedJunkDataReader::_duplicate (MaskedJunkDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Mod::MaskedJunkDataReader::_tao_release (MaskedJunkDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Mod::MaskedJunkDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Mod/MaskedJunkDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Mod::MaskedJunkDataReader::_interface_repository_id (void) const
{
  return "IDL:Mod/MaskedJunkDataReader:1.0";
}

::CORBA::Boolean
Mod::MaskedJunkDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

